#!/usr/bin/env python3

import datetime
import json
import numpy
import os
import pyaudio
import subprocess
import sys
import threading
import time
import random

phase = 0.
def callback(in_data, frame_count, time_info, status_flags):
    global f, T, A, phase
    samples = numpy.arange(frame_count) / 44100.0
    wave = (numpy.sin(2 * numpy.pi * f * samples + phase))
    phase += 2*numpy.pi*((frame_count / 44100.0) % (1/f)) / (1/f)
    f += random.randrange(-10, 11)
    if f <= 10.:
        f = 10.
    return(numpy.array(min(A, 1) * 127 * wave, dtype = numpy.int8), pyaudio.paContinue)

if __name__ == "__main__":
  f = 440
  T = 0.1
  A = 0.5

  samples = numpy.arange(44100 * T) / 44100.0

  pa = pyaudio.PyAudio()
  stream = pa.open(format=pyaudio.paInt8,
    channels=1,
    rate=44100,
    stream_callback = callback,
    output=True)

  while(True):
    time.sleep(0.1)

  stream.stop_stream()
  stream.close()
